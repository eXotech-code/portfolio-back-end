{
  "version": 3,
  "sources": ["../../.svelte-kit/adapter-node/chunks/BlogLayout.js"],
  "sourcesContent": ["import { c as create_ssr_component, b as add_attribute, e as escape, h as each, v as validate_component } from \"./index.js\";\nimport { a as arrowRight } from \"./arrow-right.js\";\nimport { T as Tag } from \"./Tag.js\";\nconst randInt = (min, max) => {\n  const rand = Math.random();\n  return Math.floor(rand * (max - min + 1)) + min;\n};\nconst Lines_svelte_svelte_type_style_lang = \"\";\nconst css$2 = {\n  code: \"svg.svelte-8ee4gh.svelte-8ee4gh{width:100%;height:100%}@keyframes svelte-8ee4gh-dash{from{stroke-dashoffset:0}to{stroke-dashoffset:1500}}svg.svelte-8ee4gh path.svelte-8ee4gh{fill:none;stroke:#000;stroke-width:8;stroke-dasharray:1000;stroke-dashoffset:1500;animation:svelte-8ee4gh-dash 8s linear alternate infinite}\",\n  map: null\n};\nconst MAX_ANG = 110;\nconst MIN_ANG = 30;\nconst MIN_POINT = 0;\nconst MAX_POINT = 400;\nconst POINT_DISTANCE = 150;\nconst MIN_DISTANCE = 24;\nconst MAX_CALLS = 100;\nconst BOUND_TOLERANCE = 0.6;\nconst Lines = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  const REGEN_POINT = [-1, -1];\n  class Path {\n    constructor(corners) {\n      this.corners = corners;\n      this.element = void 0;\n      const beginPoint = this.translateCoord(Array(2).fill(MAX_POINT / 2));\n      this.points = [beginPoint];\n      this.angles = [0];\n      this.pathString = `M ${beginPoint.join(\" \")}`;\n    }\n    randomAngle() {\n      const lastAng = this.angles.at(-1);\n      if ((lastAng === 90 || lastAng === 45) && this.angles.at(-2) !== lastAng) {\n        return lastAng;\n      }\n      const seed = Number.parseFloat(Math.random().toFixed(2));\n      if (seed < 0.3 && lastAng !== 90) {\n        return 90;\n      }\n      if (seed > 0.8) {\n        if (Math.random() > 0.5) {\n          return 315;\n        }\n        return 270;\n      }\n      if (seed === 0.5) {\n        return randInt(MIN_ANG, MAX_ANG);\n      }\n      return Math.floor(randInt(MIN_ANG, MAX_ANG) / 10) * 10;\n    }\n    translateCoord(coord) {\n      return [coord[0], MAX_POINT - coord[1]];\n    }\n    drawLine(newPoint) {\n      this.pathString += ` L ${newPoint.join(\" \")}`;\n    }\n    toRadians(angleDeg) {\n      return angleDeg * (Math.PI / 180);\n    }\n    calcDistance(p1, p2) {\n      return Math.sqrt(Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2));\n    }\n    newPoint(calls) {\n      const lastPoint = this.points.at(-1);\n      const ang = this.randomAngle();\n      const angleRad = this.toRadians(ang);\n      let x = Math.floor(lastPoint[0] + POINT_DISTANCE * Math.cos(angleRad));\n      let y = Math.floor(lastPoint[0] + POINT_DISTANCE * Math.sin(angleRad));\n      if (this.points.length > 1) {\n        let index = this.points.length - 2;\n        x = Math.floor(-(lastPoint[0] - this.points[index][0]) * Math.cos(angleRad) - -(lastPoint[1] - this.points[index][1]) * Math.sin(angleRad) + lastPoint[0]);\n        y = Math.floor(-(lastPoint[0] - this.points[index][0]) * Math.sin(angleRad) + -(lastPoint[1] - this.points[index][1]) * Math.cos(angleRad) + lastPoint[1]);\n      }\n      const newp = [x, y];\n      for (const point of this.points) {\n        const d = this.calcDistance(point, newp);\n        if (d < MIN_DISTANCE) {\n          if (calls !== MAX_CALLS) {\n            return this.newPoint(calls + 1);\n          }\n          return REGEN_POINT;\n        }\n      }\n      this.angles.push(ang);\n      return newp;\n    }\n    newLine() {\n      const p2 = this.newPoint(0);\n      if (p2 === REGEN_POINT) {\n        return -1;\n      }\n      this.points.push(p2);\n      const pTranslated = this.translateCoord(p2);\n      this.drawLine(pTranslated);\n      return 0;\n    }\n    zero() {\n      this.points = [Array(2).fill(MAX_POINT / 2)];\n      this.pathString = `M ${this.points[0].join(\" \")}`;\n      this.angles = [0];\n    }\n    pointsDoFit() {\n      let count = 0;\n      for (const p2 of this.points) {\n        p2.forEach((coord) => {\n          if (coord > MAX_POINT || coord < MIN_POINT) {\n            count++;\n          }\n        });\n      }\n      return count * 2 / this.points.length <= BOUND_TOLERANCE;\n    }\n    genPath() {\n      var _a;\n      for (let i = 0; i < this.corners; i++) {\n        if (this.newLine() === -1 || !this.pointsDoFit())\n          return -1;\n      }\n      if (!this.element) {\n        window.setTimeout(() => this.genPath(), 500);\n      }\n      (_a = this.element) == null ? void 0 : _a.setAttribute(\"d\", this.pathString);\n      return 0;\n    }\n    drawPath() {\n      let exitCode = this.genPath();\n      while (exitCode === -1) {\n        this.zero();\n        exitCode = this.genPath();\n      }\n    }\n  }\n  let p = new Path(10);\n  $$result.css.add(css$2);\n  return `<svg viewBox=\"${\"0 0 400 400\"}\" class=\"${\"svelte-8ee4gh\"}\"><path d=\"${\"\"}\" class=\"${\"svelte-8ee4gh\"}\"${add_attribute(\"this\", p.element, 0)}></path></svg>`;\n});\nconst Post_svelte_svelte_type_style_lang = \"\";\nconst css$1 = {\n  code: '.post.svelte-1wr73og.svelte-1wr73og{border:1px solid #000;display:flex;flex-direction:column}img.svelte-1wr73og.svelte-1wr73og{width:100%;height:auto}.text.svelte-1wr73og.svelte-1wr73og{padding:1rem;display:flex;flex-direction:column;gap:1rem;flex-grow:1}h3.svelte-1wr73og.svelte-1wr73og{font-family:\"PlayFair Display\", serif;font-weight:500;font-size:1.5rem}.date.svelte-1wr73og.svelte-1wr73og{font-size:0.75rem}.description.svelte-1wr73og.svelte-1wr73og{font-size:1rem;font-weight:300}.tags.svelte-1wr73og.svelte-1wr73og{display:grid;grid-template-columns:repeat(3, max-content);grid-template-rows:repeat(2, 1rem);gap:0.5rem;flex-grow:1}.button.svelte-1wr73og.svelte-1wr73og{box-sizing:border-box;border:1px solid black;width:100%;display:flex;align-items:center;justify-content:space-between;padding:0.5rem 1rem;gap:1rem;background:#FFEFDC;transition:background 0.1s ease-out}.button.svelte-1wr73og.svelte-1wr73og:hover{background:#000;color:#fff;cursor:pointer}.button.svelte-1wr73og:hover img.svelte-1wr73og{filter:invert(100%)}.button.svelte-1wr73og.svelte-1wr73og:active{background:#393939}.button.svelte-1wr73og img.svelte-1wr73og{width:1rem;height:1rem}.button.svelte-1wr73og p.svelte-1wr73og{font-weight:400;font-size:0.75rem}',\n  map: null\n};\nconst Post = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  let { post } = $$props;\n  if ($$props.post === void 0 && $$bindings.post && post !== void 0)\n    $$bindings.post(post);\n  $$result.css.add(css$1);\n  return `<div class=\"${\"post svelte-1wr73og\"}\"${add_attribute(\"id\", post.id.toString(), 0)}>${post.image ? `<img${add_attribute(\"alt\", post.title, 0)}${add_attribute(\"src\", `blog/${post.id}.webp`, 0)} class=\"${\"svelte-1wr73og\"}\">` : ``}\n\t<div class=\"${\"text svelte-1wr73og\"}\"><h3 class=\"${\"svelte-1wr73og\"}\">${escape(post.title)}</h3>\n\t\t<p class=\"${\"date svelte-1wr73og\"}\">${escape(post.date)}</p>\n\t\t<p class=\"${\"description svelte-1wr73og\"}\">${escape(post.description)}</p>\n\t\t<div class=\"${\"tags svelte-1wr73og\"}\">${each(post.tags, (tag) => {\n    return `${validate_component(Tag, \"Tag\").$$render($$result, { borderColor: tag.colour, name: tag.name }, {}, {})}`;\n  })}</div>\n\t\t<a class=\"${\"button svelte-1wr73og\"}\"${add_attribute(\"href\", `/blog/posts/${post.id}`, 0)}><p class=\"${\"svelte-1wr73og\"}\">Read this</p>\n\t\t\t<img alt=\"${\"icon\"}\"${add_attribute(\"src\", arrowRight, 0)} class=\"${\"icon svelte-1wr73og\"}\"></a></div>\n</div>`;\n});\nconst BlogLayout_svelte_svelte_type_style_lang = \"\";\nconst css = {\n  code: \".blogposts.svelte-147zl78{display:grid;padding:1rem;grid-template-columns:repeat(3, 1fr);gap:1rem}.layout-small.svelte-147zl78{display:flex;flex-direction:column;gap:1rem}\",\n  map: null\n};\nconst BlogLayout = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  let layoutBig;\n  let layoutSmall;\n  let { type = \"small\" } = $$props;\n  let { data } = $$props;\n  let longPosts = [];\n  let shortPosts = [];\n  if ($$props.type === void 0 && $$bindings.type && type !== void 0)\n    $$bindings.type(type);\n  if ($$props.data === void 0 && $$bindings.data && data !== void 0)\n    $$bindings.data(data);\n  $$result.css.add(css);\n  {\n    {\n      if (Object.keys(data).length) {\n        Object.values(data).forEach((p) => {\n          if (p.image) {\n            longPosts = [...longPosts, p];\n          } else {\n            shortPosts = [...shortPosts, p];\n          }\n        });\n      }\n    }\n  }\n  layoutBig = type === \"small\" ? longPosts.slice(0, 2) : longPosts.slice(0, 4);\n  layoutSmall = shortPosts.slice(-2);\n  return `<div class=\"${\"blogposts svelte-147zl78\"}\">${each(layoutBig, (post) => {\n    return `${validate_component(Post, \"Post\").$$render($$result, { post }, {}, {})}`;\n  })}\n\t<div class=\"${\"layout-small svelte-147zl78\"}\">${each(layoutSmall, (post) => {\n    return `${validate_component(Post, \"Post\").$$render($$result, { post }, {}, {})}`;\n  })}</div>\n</div>`;\n});\nexport {\n  BlogLayout as B,\n  Lines as L,\n  randInt as r\n};\n"],
  "mappings": "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",
  "names": []
}
